<?php

namespace sklad\models;

use common\models\User;
use Yii;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "packet".
 *
 * @property int $id
 * @property int $product_id
 * @property int $amount
 * @property string $note
 * @property int $status
 * @property int $left
 * @property int $user_id
 * @property string $date
 * @property int $space
 *
 * @property Product $product
 * @property Rasxod[] $rasxods
 * @property Receipt[] $receipts
 */
class Packet extends \yii\db\ActiveRecord
{
    const barCodeLength = 12;
    /**
     * {@inheritdoc}
     */
    public $barcode;

    public static function tableName()
    {
        return 'packet';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['product_id', 'amount', 'date'], 'required'],
            [['product_id', 'amount', 'status', 'left', 'space', 'user_id'], 'integer'],
            [['note'], 'string'],
            [['date', 'user_id'], 'safe'],
            [['product_id'], 'exist', 'skipOnError' => true, 'targetClass' => Product::className(), 'targetAttribute' => ['product_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'product_id' => 'Продукт',
            'amount' => 'Количество',
            'note' => 'Примечание',
            'status' => 'Статус',
            'left' => 'Осталось',
            'date' => 'Дата',
            'space' => 'Место',
            'qrcode' => 'QR код',
            'barcode' => 'Bar код',
        ];
    }

    /**
     * Gets query for [[Product]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getProduct()
    {
        return $this->hasOne(Product::className(), ['id' => 'product_id']);
    }

    /**
     * Gets query for [[Product]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }

    /**
     * Gets query for [[Rasxods]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getRasxods()
    {
        return $this->hasMany(Rasxod::className(), ['packet_id' => 'id']);
    }

    /**
     * Gets query for [[Receipts]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getReceipts()
    {
        return $this->hasMany(Receipt::className(), ['packet_id' => 'id']);
    }

    public function beforeSave($insert)
    {
        $this->user_id = app()->user->identity->id;
        $this->left = $this->amount;
        return parent::beforeSave($insert);
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
        $receipt = new Receipt();
        $receipt->date = $this->date;
        $receipt->product_id = $this->product_id;
        $receipt->amount = $this->amount;
        $receipt->packet_id = $this->id;
        $receipt->status = 1;
        $receipt->save(false);
    }

    static function generatorBarCodeId($id){
        $tmp = '0';
        $stringCount = strlen((string)$id);
        for ($i = 0; $i < 10 - $stringCount; $i++){
            $tmp .= '0';
        }
        $tmp .= $id;
        return $tmp;
    }

    static function productId($packet_id){
        return Packet::find()->where(['id' => $packet_id])->one()->product_id;
    }

    static function productInformation($packet_id){
        return Product::find()->where(['id' => self::productId($packet_id)])->one();
    }

    public function getProductList(){
        $product = Product::find()->all();
        return ArrayHelper::map($product, 'id',
            function($model) {
                return $model['vendor_code'].' - '.$model['name'];
            });
    }

}
